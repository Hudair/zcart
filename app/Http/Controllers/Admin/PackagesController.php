<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-07-02 08:41:51              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Package; use App\Services\PackageInstaller; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Cache; use Illuminate\Support\Facades\Artisan; use Carbon\Carbon; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\x61\x64\155\x69\156\56\160\x61\143\153\x61\x67\145\x73\x2e\151\156\144\145\x78", compact("\151\x6e\163\164\x61\x6c\x6c\141\142\x6c\145\x73", "\x69\x6e\x73\x74\141\x6c\154\163")); } public function upload() { return view("\x61\x64\155\x69\x6e\56\x70\x61\x63\153\141\x67\145\x73\x2e\137\x75\x70\154\157\141\x64"); } public function save(Request $request) { echo "\x3c\x70\162\x65\x3e"; print_r($request->all()); echo "\74\160\162\x65\76"; exit("\x65\x6e\x64\x21"); } public function initiate(Request $request, $package) { if (!(config("\x61\x70\x70\56\144\x65\155\x6f") == true && config("\141\x70\160\56\144\145\x62\165\147") !== true)) { goto ekERz; } return back()->with("\167\x61\162\x6e\x69\x6e\147", trans("\x6d\x65\x73\163\141\147\145\x73\x2e\144\145\x6d\x6f\x5f\162\145\163\x74\162\x69\143\164\151\x6f\156")); ekERz: $installable = $this->scanPackages($package); if (!$installable) { goto W49fn; } if (!Package::where("\x73\x6c\165\x67", $installable["\x73\154\x75\x67"])->first()) { goto iINU5; } return back()->with("\x65\162\162\x6f\162", trans("\155\145\163\x73\x61\x67\x65\x73\56\x70\141\143\x6b\141\x67\x65\x5f\x69\x6e\163\164\141\x6c\154\145\144\x5f\141\x6c\x72\145\141\x64\171", ["\x70\x61\x63\x6b\x61\147\x65" => $package])); iINU5: W49fn: return view("\x61\144\x6d\151\156\56\x70\141\x63\x6b\141\x67\x65\163\56\137\x69\x6e\151\164\x69\141\164\x65", compact("\x69\x6e\x73\164\141\154\x6c\x61\142\x6c\145")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\x61\160\160\56\144\145\155\x6f") == true && config("\141\160\x70\56\144\x65\142\x75\147") !== true)) { goto aXsUk; } return back()->with("\x77\x61\x72\x6e\151\x6e\x67", trans("\x6d\x65\163\163\141\x67\145\163\x2e\x64\145\155\157\137\162\x65\163\164\x72\151\143\x74\151\157\x6e")); aXsUk: $installable = $this->scanPackages($package); if (!$installable) { goto Qoha7; } DB::beginTransaction(); try { $installer = new PackageInstaller($request, $installable); if (!$installer->install()) { goto Vpa3j; } DB::commit(); Artisan::call("\x63\141\143\150\145\x3a\143\x6c\x65\141\162"); $msg = trans("\x6d\x65\x73\x73\141\147\x65\x73\56\x70\141\143\x6b\x61\x67\145\x5f\x69\x6e\163\164\x61\154\x6c\145\144\x5f\x73\165\x63\143\x65\163\163", ["\160\141\143\x6b\x61\x67\x65" => $package]); return back()->with("\x73\165\x63\143\145\x73\163", $msg); Vpa3j: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\145\x72\x72\157\162", $e->getMessage()); } Qoha7: return back()->with("\145\162\x72\x6f\x72", trans("\x6d\145\x73\163\x61\147\145\163\56\x66\141\151\154\x65\x64")); } public function uninstall(Request $request, $package) { if (!(config("\x61\160\160\56\144\x65\x6d\x6f") == true && config("\141\x70\160\56\144\x65\x62\165\147") !== true)) { goto vghN8; } return back()->with("\167\141\162\x6e\151\x6e\147", trans("\155\x65\163\x73\141\x67\145\x73\x2e\x64\x65\155\157\x5f\162\x65\x73\x74\x72\151\143\164\151\x6f\156")); vghN8: $registered = Package::where("\163\x6c\165\x67", $package)->firstOrFail(); DB::beginTransaction(); try { $installer = new PackageInstaller($request, $registered->toArray()); if (!$installer->uninstall()) { goto zy_AH; } Artisan::call("\x63\141\x63\150\145\72\x63\x6c\x65\141\162"); DB::commit(); if (!$registered->delete()) { goto iOEmC; } $msg = trans("\x6d\145\x73\163\x61\147\x65\x73\x2e\x70\141\143\x6b\x61\x67\x65\x5f\165\x6e\151\156\163\x74\x61\x6c\154\145\x64\x5f\x73\x75\x63\143\145\163\x73", ["\x70\141\143\153\141\147\145" => $package]); return back()->with("\x73\x75\x63\143\x65\x73\x73", $msg); iOEmC: zy_AH: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\x65\x72\x72\157\162", $e->getMessage()); } return back()->with("\x65\x72\162\x6f\x72", trans("\155\145\x73\163\141\147\x65\163\56\x66\x61\x69\154\x65\144")); } public function activation(Request $request, $package) { if (!(config("\x61\x70\160\x2e\144\x65\155\157") == true && config("\141\x70\x70\x2e\144\145\142\x75\147") !== true)) { goto oyPfO; } return response("\x65\162\162\157\162", 444); oyPfO: if (!($registered = Package::where("\163\x6c\x75\147", $package)->first())) { goto AyqNU; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\x63\141\x63\150\145\x3a\143\154\145\x61\x72"); return response("\x73\x75\143\x63\145\163\x73", 200); AyqNU: $unregistered = $this->scanPackages($package); \Log::info($unregistered); if (!$unregistered) { goto PtXRA; } $registered = Package::create($unregistered); PtXRA: return response("\x73\165\143\x63\145\x73\x73", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto DRkVV; } Artisan::call("\143\x61\x63\x68\x65\x3a\143\x6c\145\141\162"); return back()->with("\163\x75\143\x63\145\x73\163", trans("\x6d\x65\163\163\141\147\145\163\x2e\160\141\143\153\x61\147\145\x5f\163\145\x74\x74\151\x6e\147\163\137\x75\x70\144\141\164\145\x64")); DRkVV: return back()->with("\x65\x72\162\x6f\162", trans("\x6d\145\163\x73\x61\147\x65\163\x2e\x66\x61\x69\154\145\144")); } public function toggleConfig(Request $request, $option) { if (!(config("\x61\160\x70\56\x64\145\x6d\157") == true && config("\141\160\x70\56\144\x65\142\x75\x67") !== true)) { goto giuD0; } return response("\x65\162\x72\157\x72", 444); giuD0: if (!DB::table("\x6f\160\164\151\157\156\163")->where("\x6f\x70\164\x69\157\x6e\137\156\141\x6d\x65", $option)->update(["\x6f\x70\x74\x69\x6f\156\x5f\x76\141\154\x75\x65" => DB::raw("\x4e\117\124\40\x6f\160\x74\x69\157\x6e\137\x76\141\x6c\165\145")])) { goto T8NJk; } Artisan::call("\x63\x61\143\x68\145\72\x63\x6c\145\x61\162"); return response("\163\165\143\x63\145\x73\x73", 200); T8NJk: return response("\x65\162\162\157\162", 405); } private function scanPackages($slug = Null) { $packages = []; foreach (glob(base_path("\160\x61\143\153\x61\147\x65\163\x2f\52"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\x6d\141\156\x69\x66\x65\x73\x74\56\x6a\163\157\x6e")) { goto QrEYJ; } $json = file_get_contents($manifest); if (!($json !== '')) { goto DXnWR; } $data = json_decode($json, true); if (!($data === null)) { goto lR1SP; } throw new \Exception("\111\156\x76\x61\154\151\144\x20\155\141\x6e\x69\146\x65\x73\x74\56\152\163\x6f\156\40\146\151\154\145\40\x61\x74\x20\x5b{$dir}\135"); lR1SP: if (!($slug && $data["\163\154\165\x67"] == $slug)) { goto JbnjH; } return $data; JbnjH: $packages[] = $data; DXnWR: QrEYJ: P3Oly: } hWOLG: return $packages; } }